<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <groupId>com.centit.framework</groupId>
    <version>4.1-SNAPSHOT</version>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>framework-web-demo</artifactId>
    <packaging>war</packaging>
    <name>com.centit.framework:framework-web-demo</name>
    <description>基于框架开发的应用示例，根据项目的需要
        ramework-system-hibernate、framework-system-mybatis、framework-system-static
        这三个基础包选择一个， 选择 framework-system-static 需要 framework-base-view-easyui和其搭配，
        其他的两个选择 framework-sys-view-easyui
    </description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <jdk.version>1.8</jdk.version>
        <centit.framework.version>4.1-SNAPSHOT</centit.framework.version>
        <centit.commons.version>2.2.1803</centit.commons.version>

        <centit.ui.version>3.1.0</centit.ui.version>
        <websocket-api.version>1.1</websocket-api.version>
        <ojdbc6.version>11.2.0.4</ojdbc6.version>
        <junit.version>4.12</junit.version>
        <mysql.version>5.1.9</mysql.version>
        <javafaker.version>0.14</javafaker.version>

        <servlet-api.version>3.1.0</servlet-api.version>
        <persistence-api.version>2.2</persistence-api.version>
    </properties>

    <dependencies>

        <dependency>
            <groupId>com.centit.framework</groupId>
            <artifactId>framework-base-view-easyui</artifactId>
            <version>${centit.ui.version}</version>
        </dependency>

        <dependency>
            <groupId>com.centit.framework</groupId>
            <artifactId>framework-core-web</artifactId>
            <version>${centit.framework.version}</version>
        </dependency>

        <dependency>
            <groupId>com.centit.framework</groupId>
            <artifactId>framework-config</artifactId>
            <version>${centit.framework.version}</version>
        </dependency>

        <!--<dependency>
            <groupId>com.centit.framework</groupId>
            <artifactId>framework-security</artifactId>
            <version>${centit.framework.version}</version>
        </dependency>-->

        <dependency>
            <groupId>com.centit.framework</groupId>
            <artifactId>framework-system-static</artifactId>
            <version>${centit.framework.version}</version>
        </dependency>

        <dependency>
            <groupId>com.centit.framework</groupId>
            <artifactId>framework-system-static-config</artifactId>
            <version>${centit.framework.version}</version>
        </dependency>

        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>javax.persistence-api</artifactId>
            <version>${persistence-api.version}</version>
        </dependency>
        <!-- server runtime library -->
        <dependency>
            <groupId>com.sun</groupId>
            <artifactId>tools</artifactId>
            <version>${jdk.version}</version>
            <systemPath>${env.JAVA_HOME}/lib/tools.jar</systemPath>
            <scope>system</scope>
        </dependency>

        <dependency>
            <groupId>javax.websocket</groupId>
            <artifactId>javax.websocket-api</artifactId>
            <version>${websocket-api.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${servlet-api.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.github.javafaker</groupId>
            <artifactId>javafaker</artifactId>
            <version>${javafaker.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.1</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                    <encoding>UTF-8</encoding>
                    <compilerArguments>
                        <verbose />
                        <bootclasspath>${java.home}/lib/rt.jar;${java.home}/lib/jce.jar</bootclasspath>
                    </compilerArguments>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>